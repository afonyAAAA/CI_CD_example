name: Android CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build & Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout репозитория
        uses: actions/checkout@v4

      - name: Установка JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: gradle

      - name: Настройка кеша Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Даем права на выполнение Gradle Wrapper
        run: chmod +x gradlew

      - name: Восстанавливаем keystore
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > app/keystore.jks

      - name: Сборка подписанного APK и AAB
        run: ./gradlew assembleRelease bundleRelease
        env:
          KEYSTORE_PASSWORD: ${{ secrets.KEY_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}

      - name: Запуск тестов
        run: ./gradlew test

      - name: Установка Firebase CLI
        run: curl -sL https://firebase.tools | bash

      - name: Загрузка APK в Firebase App Distribution
        env:
          FIREBASE_APP_ID: "1:268316066317:android:473c843b36984b98c2cb44"
        run: |
          echo '${{ secrets.FIREBASE_CREDENTIALS }}' > firebase.json
          export GOOGLE_APPLICATION_CREDENTIALS=$PWD/firebase.json
          firebase appdistribution:distribute app/build/outputs/apk/release/app-release.apk \
          --app $FIREBASE_APP_ID \
          --release-notes "Автоматическая сборка" \
          --groups testers
